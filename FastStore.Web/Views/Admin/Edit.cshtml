@model FastStore.Domain.Entidades.Produto

@{
    ViewBag.Title = "Editar Produto";
}

<h2>Editar Produto</h2>


@using (Html.BeginForm("Edit", "Admin", null, FormMethod.Post, new
    {
        enctype = "multipart/form-data"
    }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProdutoId)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaId, "CategoriaId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoriaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Verificando se produto tem imagem, se não tiver, usa a padrão-->
        @if (Model.Imagem != null)
        {
            <dt>
                Imagem
            </dt>
            <dd>
                <img src="@Url.Action("ExibirImagem", "Arquivo", new { id = Model.ProdutoId })" width="150" height="150" />
            </dd>
        }
        else
        {
            <dt>
                Imagem
            </dt>
            <dd>

                <img src="~/Imagens/semimagem.jpg" width="150" height="150" />
            </dd>
        }

        <div class="form-group">
            @Html.Label("Imagem", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="imagem" name="upload" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar", "Index")
</div>
